version: '3.7'

services:
  postgres:
    image: postgres:14.0-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - backend_nw

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: postgres
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    volumes:
      - ./scr:/opt/todolist
    networks:
      - backend_nw
      - frontend

  frontend:
    image: sermalenk/skypro-front:lesson-34
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"
    networks:
      - frontend
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf

volumes:
  postgres_data:
  scr:

networks:
  backend_nw:
    driver: bridge
  frontend:
    driver: bridge
